module main // must be named same as the file! 

import src/puzzle
import src/fen
import io/error
import io/filesystem
import src/csvmanager





/**
def getRandomLine(str: String): List[Option[Int]] = {
  // Split by both Windows and Unix line endings
  val lines = str.string::split("\n")

  if (lines.length == 0) {
    return [None(), None(), None()]
  }
  
  // Handle empty string case
  // Get random index between 0 and lines.length - 1
  val randomIndex = (random() * lines.length.toDouble).toInt
  val randomIndex1 = (random() * lines.length.toDouble).toInt
  val randomIndex2 = (random() * lines.length.toDouble).toInt
  return [Some(randomIndex), Some(randomIndex1), Some(randomIndex2)]

}**/





def main() = {

  println("start◻️")


  with on[IOError].panic; 
  
  with filesystem;        

  //val content = readFile("1.csv")
  //println(content.string::split("\n"))
   
  //var b1 = fenToBoard("2r3kR/Q7/5q2/1brpN3/5Pp1/4P1P1/6K1/1B6 b KQkq - 0 12")
  // b - - 2 43,f6h8 a7f7
  //printBoard(b1)
  //b1 = makeMove(b1, "f6h8")
  //printBoard(b1)
  val puzzle = getRandomPuzzle("easy.csv")
  var p = Puzzle(puzzle.second, fenToBoard(puzzle.first), fenToColor(puzzle.first))
  minimalWorkingProduct(p)
  //var b1 = fenToBoard("8/8/8/8/8/8/8/8 b - - 2 43")
  //var b2 = fenToBoard("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1")
  //printBoard(b2)
  

  println("end")
  
}